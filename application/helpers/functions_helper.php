<?php
defined('BASEPATH') or exit('No direct script access allowed');


/////Helper Function For Login Views//////
if (!function_exists('AdminView')) {
    function AdminView($page, $data = array(), $title = null)
    {
        $thiz = &get_instance();
        $titles['title'] = $title;
        $thiz->load->view('templates/admin/header', $titles);
        $thiz->load->view($page, $data);
        $thiz->load->view('templates/admin/footer');
        // $thiz->load->view('templates/ad_footer',array('ad_scriptfile'=>basename($page))); 
    }
}

/////decryptData//////
if (!function_exists('decryptData')) {
    function decryptData($string, $salt)
    {
        $password = "yEfHZ18ly"; //$thiz->objDefaultVariable->VAR_PASSWORD_CRYPTO_KEY;

        $output = false;
        $encrypt_method = "AES-256-CBC";
        $secret_key = $password;
        $secret_iv = $salt;

        $secret_iv_first = strrev(substr($secret_iv, 0, 5));
        $secret_iv_last = strrev(substr($secret_iv, -5));
        $secret_iv = $secret_iv_last . '9' . $secret_iv_first;

        // hash
        $key = hash('sha256', $secret_key);
        // iv - encrypt method AES-256-CBC expects 16 bytes - else you will get a warning
        $iv = substr(hash('sha256', $secret_iv), 0, 16);

        $output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
        return $output;
    }
}


////encryptData
if (!function_exists('encryptData')) {
    function encryptData($plaintext)
    {
        $password = "yEfHZ18ly"; //$thiz->objDefaultVariable->VAR_PASSWORD_CRYPTO_KEY;
        //$password = $thiz->objDefaultVariable->VAR_PASSWORD_CRYPTO_KEY;

        $rand_IV = date('His', time()) . mt_rand();
        $rand_IV = str_shuffle($rand_IV);



        $encrypt_method = "AES-256-CBC";
        $secret_key = $password;

        $secret_iv = $rand_IV;
        $secret_iv_first = strrev(substr($secret_iv, 0, 5));
        $secret_iv_last = strrev(substr($secret_iv, -5));
        $secret_iv = $secret_iv_last . '9' . $secret_iv_first;
        // hash
        $key = hash('sha256', $secret_key);
        // iv - encrypt method AES-256-CBC expects 16 bytes - else you will get a warning
        $iv = substr(hash('sha256', $secret_iv), 0, 16);

        $output = openssl_encrypt($plaintext, $encrypt_method, $key, 0, $iv);
        $output = base64_encode($output);
        $d["enc_text"] = $output;
        $d["salt"] = $rand_IV;
        return $d;
    }
}

///GetIntegerDate
if (!function_exists('IntegerDate')) {
    function IntegerDate()
    {
        date_default_timezone_set('UTC');
        return (strtotime("now"));
    }
}

///Password Reset Email
if (!function_exists('PasswordResetEmail')) {

    ///sendEmail
    function PasswordResetEmail($link, $email)
    {
        // Load the email library
        $thiz = &get_instance();
        $thiz->load->library('email');

        // Mail config
        $to = $email;
        $from = 'no-reply@reva.com';
        $fromName = 'Reva Portal';
        $mailSubject = 'Reset Your Password';

        // Mail content
        $mailContent = '
           <h4>This Requested Generated By You From Reva Portal For Password Reseting:</h4>  
           <p><b>Link: </b> <a href="' . $link . '">Click Here and Reset Password</a>  </p>';

        $config['mailtype'] = 'html';
        $thiz->email->initialize($config);
        $thiz->email->to($to);
        $thiz->email->from($from, $fromName);
        $thiz->email->subject($mailSubject);
        $thiz->email->message($mailContent);

        // Send email & return status
        return $thiz->email->send() ? true : false;
    }
}


///New User Invitation Email
if (!function_exists('NewUserInvetaionEmail')) {

    ///sendEmail
    function NewUserInvetaionEmail($link, $to = null, $from = null, $deal = null, $address = null)
    {

        $thiz = &get_instance();
        $thiz->load->library('email');
        $subject = "You've Been Invited to Reva!";
        $data = array();
        $data['from_email'] = $from;
        $data['deal'] = $deal;
        $data['address'] = $address;
        $data['from_email'] = $from;
        $data['link'] = $link;
        $mesg = $thiz->load->view('email_template', $data, true);


        $config = array(
            'charset' => 'utf-8',
            'wordwrap' => TRUE,
            'mailtype' => 'html'
        );

        $thiz->email->initialize($config);

        $thiz->email->to($to);
        $thiz->email->from($from, "Reva");
        $thiz->email->subject($subject);
        $thiz->email->message($mesg);
        $mail = $thiz->email->send();
        if ($mail) {
            log_message('error', 'Email sent on this address :' . $to);
        }
        return $mail;
    }
}

///CheckProfile
if (!function_exists('CheckProfile')) {

    ///CheckProfile
    function CheckProfile($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            return $findData[0]->profile;
        }
    }
}


///NoProfile
if (!function_exists('NoProfile')) {

    ///NoProfile
    function NoProfile($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            $name = $findData[0]->name;
            $firsLetter = ucfirst($name[0]);
            $div = '<div class="circle-x"><span>' . $firsLetter . '</span></div>';
            return $div;
        }
    }
}


///resizeImage
if (!function_exists('resizeImage')) {
    ///Manage Image Resize process
    function resizeImage($filename, $user_id)
    {
        $thiz = &get_instance();
        $source_path = FCPATH . '/assets/profiles/' . $user_id . '/' . $filename;
        $target_path = FCPATH . '/assets/profiles/' . $user_id . '/';
        $config_manip = array(
            'image_library' => 'gd2',
            'source_image' => $source_path,
            'new_image' => $target_path,
            'maintain_ratio' => TRUE,
            'width' => 500,
        );

        $thiz->load->library('image_lib', $config_manip);
        if (!$thiz->image_lib->resize()) {
            //  echo $thiz->image_lib->display_errors();
            return false;
        } else {
            $thiz->image_lib->clear();
            return true;
        }
    }
}

//GetFollowUsers
if (!function_exists('GetFollowUsers')) {
    function GetFollowUsers($deal_id)
    {
        $findData = getByWhere('deal_invite_members', '*', array('deal_id' => $deal_id));

        if (isset($findData) && !empty($findData)) {
            $html = ' ';
            for ($i = 0; $i < count($findData); $i++) {
                $value = (array) $findData[$i];
                $userProfile = CheckProfile($value['invited_user_id']);
                if ($userProfile == 'No Profile') {
                    $html = $html . NoProfile($value['invited_user_id']);
                } else {
                    $html = $html . ' <img src=" ' . base_url(GetUserProfile($value['invited_user_id'])) .  ' "    width="30" height="30"  >';
                }
            }
            return $html;
        }
    }
}


//GetMessageUserProfile
if (!function_exists('GetMessageUserProfile')) {
    function GetMessageUserProfile($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        $html = ' ';
        if (isset($findData) && !empty($findData)) {
            for ($i = 0; $i < count($findData); $i++) {
                $value = (array) $findData[$i];
                $userProfile = CheckProfile($value['user_id']);
                if ($userProfile == 'No Profile') {
                    $html = $html . NoProfile($value['user_id']);
                } else {
                    $html = $html . ' <img src=" ' . base_url(GetUserProfile($value['user_id'])) .  ' "    width="40" height="40"  >';
                }
            }
            return $html;
        }
    }
}


//GetChatUsers
if (!function_exists('GetChatUsers')) {
    function GetChatUsers($deal_chat_room_id)
    {
        $findData = getByWhere('deal_chat_participant', '*', array('deal_chat_room_id' => $deal_chat_room_id));



        if (isset($findData) && !empty($findData)) {

            $users = array();
            $users = $findData;

            //check users array
            if (!empty($users)) {
                $chat_type = (count($users) > 2 ? 'group' : 'single');
                $html = '<div class="chat_div" title="" onclick = get_chat(\'' . $deal_chat_room_id . '\',\'' . $chat_type . '\')>';
                for ($i = 0; $i < count($users); $i++) {
                    $user_id =  $users[$i]->user_id;
                    $userProfile = CheckProfile($user_id);
                    if ($userProfile == 'No Profile') {
                        $html = $html . NoProfile($user_id);
                    } else {
                        $html = $html . ' <img src=" ' . base_url(GetUserProfile($user_id)) .  ' "    width="30" height="30"    >';
                    }
                }
            }
            $html .= '</div>';
        }

        return $html;
    }
}


//CountOfMembers
if (!function_exists('CountOfMembers')) {
    function CountOfMembers($string)
    {

        $members = explode('|', $string);
        return count($members);
    }
}


//RecentActivitiesCount
if (!function_exists('RecentActivitiesCount')) {
    function RecentActivitiesCount($deal_id)
    {
        $findData = getByWhere('deal_activity', '*', array('deal_id' => $deal_id));

        if (isset($findData) && !empty($findData)) {
            $html = '<div class="count-activity">' .
                '<span>' . count($findData) . '</span>' .
                '</div>';
            return $html;
        }
    }
}


//RecentActivities
if (!function_exists('RecentActivities')) {
    function RecentActivities($deal_id)
    {
        $findData = getByWhere('deal_activity', '*', array('deal_id' => $deal_id));

        if (isset($findData) && !empty($findData)) {
            $html = ' ';
            for ($i = 0; $i < count($findData); $i++) {
                $html .= '<div class="recent-label">' .
                    '<p class="mb-0"><span class="recent-label-span"> Sarah Musk </span> has added task </p>' .
                    '<p> “Client Begins Process</p>' .
                    '</div>';
            }
            return $html;
        }
    }
}


///GetRolesName
if (!function_exists('GetRoleName')) {
    function GetRoleName($role_id)
    {
        $findData = getByWhere('user_roles', '*', array('role_id' => $role_id));
        if ($findData) {
            return $findData[0]->role_title;
        } else {
            return 'others';
        }
    }
}

///GetUserRolesById
if (!function_exists('GetUserRolesById')) {
    function GetUserRolesById($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            $role_id = $findData[0]->role_id;
            return GetRoleName($role_id);
        } else {
            return '';
        }
    }
}


///GetRolesName
if (!function_exists('GetUserName')) {
    function GetUserName($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            return $findData[0]->name;
            // return "muhammadshaoor1707276@gmail.com";
        } else {
            return 'No Name';
        }
    }
}


///GetUserEmail
if (!function_exists('GetUserEmail')) {
    function GetUserEmail($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            return $findData[0]->email;
        } else {
            return 'No Record';
        }
    }
}


///GetUserId
if (!function_exists('GetUserId')) {
    function GetUserId($email)
    {
        $findData = getByWhere('users', '*', array('email' => $email));
        if ($findData) {
            return $findData[0]->user_id;
        }
        return 0;
    }
}


///GetUserStatus
if (!function_exists('GetUserStatus')) {
    function GetUserStatus($user_id)
    {
        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            return $findData[0]->user_status;
        } else {
            return 'No Record';
        }
    }
}

///GetUserProfile
if (!function_exists('GetUserProfile')) {
    function GetUserProfile($user_id)
    {

        $findData = getByWhere('users', '*', array('user_id' => $user_id));
        if ($findData) {
            if ($findData[0]->profile == 'No Profile') {
                // $name = substr($findData[0]->name,0,1);
                // $div = '<div class="text-ecllips"><span>'.ucfirst($name).'</span></div>'; 
                return 'assets/profiles/no-profile.jpg';
            } else {
                return $findData[0]->profile;
            }
        } else {
            return 'assets/profiles/no-profile.jpg';
        }
    }
}

///CheckFileExtention
if (!function_exists('CheckFileExtention')) {

    ///NoProfile
    function CheckFileExtention($filename)
    {
        $file_ext = pathinfo($filename, PATHINFO_EXTENSION);

        $ext = strtolower($file_ext);
        $flag = 0;
        switch ($ext) {
            case 'jpg':
                $flag = 1;
                break;
            case 'jpeg':
                $flag = 1;
                break;
            case 'png':
                $flag = 1;
                break;

            default:
                $flag = 0;
                break;
        }

        return $flag;
    }
}


///TextAreaDescriptionReplace
if (!function_exists('TextAreaDescriptionReplace')) {
    function TextAreaDescriptionReplace($string)
    {
        return nl2br($string);

        // return strtr($string, array("\r\n" => '<br />', "\r" => '<br />', "\n" => '<br />'));
    }
}


///br2nl
if (!function_exists('br2nl')) {
    function br2nl($st)
    {
        $str = preg_replace('/<br(\s+)?\/?>/i', "&#13;&#10;", $st);
        return $str;
    }
}


///GetNameFromEmail
if (!function_exists('GetNameFromEmail')) {
    function GetNameFromEmail($st)
    {
        $whatIWant = substr($st, 0, strpos($st, "@"));
        return $whatIWant;
    }
}


///ConvertArrayToString
if (!function_exists('ConvertArrayToString')) {
    function ConvertArrayToString($array = array())
    {
        $string = implode("|", $array);
        return $string;
    }
}


///check cookies 
if (!function_exists('CheckCookieData')) {
    function CheckCookieData()
    {
        $findData = getByWhere('users', '*', array('remember_token' => $_COOKIE['remember_me']));

        ///set session 
        $session_data = array(
            'user_id'  => $findData[0]->user_id,
            'user_name'  => $findData[0]->name,
            'email'     => $findData[0]->email,
            'role_id'      => $findData[0]->role_id,
            'name'      => $findData[0]->name,
            'contact'  => $findData[0]->contact,
            'email_encrypt'  => $findData[0]->email_encrypt,
            'profile'      => $findData[0]->profile,
            'logged_in' => TRUE,
        );

        $thiz = &get_instance();
        $thiz->session->set_userdata($session_data);
        $url = base_url('deals');
        redirect($url);
    }
}
